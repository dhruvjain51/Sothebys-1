version: '3'

services:
  models:
    build: ./models/.
    container_name: models
    network_mode: "bridge"
    external_links:
      - mysql:db
    command: >
      bash -c "python manage.py makemigrations --merge
      && python manage.py migrate
      && python manage.py loaddata db.json
      && mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/Sothebys/wsgi.py"
    volumes:
      - ./models:/app
    ports:
      - "8001:8000"
  web:
    build: ./web/.
    container_name: web
    network_mode: "bridge"
    links:
      - exp:exp-api
      - redis:redis
    command: >
      bash -c "mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/web/wsgi.py"
    volumes:
      - ./web:/app
    ports:
      - "8000:8000"
  web2:
    build: ./web/.
    container_name: web2
    network_mode: "bridge"
    links:
      - exp:exp-api
    command: >
      bash -c "mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/web/wsgi.py"
    volumes:
      - ./web:/app
    ports:
      - "8003:8000"
  exp:
    build: ./exp/.
    container_name: exp
    network_mode: "bridge"
    restart: always
    links:
      - models:models-api
      - kafka:kafka
      - es:es
    command: >
      bash -c "./wait-for-it.sh es:9200 --timeout=20 --strict -- python setup.py
      && mod_wsgi-express start-server --working-directory /app --reload-on-changes /app/exp/wsgi.py"
    volumes:
      - ./exp:/app
    ports:
      - "8002:8000"
  kafka:
    image: spotify/kafka
    container_name: kafka
    network_mode: "bridge"
    environment:
      ADVERTISED_HOST: kafka
      ADVERTISED_PORT: 9092
    hostname: kafka
  es:
    image: elasticsearch:2.0
    network_mode: "bridge"
    container_name: es
    ports:
      - "9200:9200"
  batch:
    build: ./batch/.
    network_mode: "bridge"
    container_name: batch
    command: >
      bash -c "./wait-for-it.sh kafka:9092 --timeout=20 --strict -- python search.py"
    depends_on:
      - "kafka"
    links:
      - kafka:kafka
      - es:es
      - exp:exp
  selenium-test:
    image: tp33/django
    build: ./selenium_test/.
    network_mode: "bridge"
    container_name: selenium-test
    links:
      - selenium-chrome:selenium-chrome
      - web:web
      - es:es
    volumes:
      - ./selenium_test:/app
    command: >
      bash -c "./wait-for-it.sh es:9200 --timeout=30 --strict -- pip install selenium && python manage.py test tests"
  selenium-chrome:
    image: selenium/standalone-chrome
    network_mode: "bridge"
    container_name: selenium-chrome
    links:
      - web:web
    ports:
      - "4444:4444"
  redis:
    image: redis
    container_name: redis
    network_mode: "bridge"
    hostname: redis
    expose:
      - "6379"
=======
  haproxy:
    build: ./haproxy/.
    network_mode: "bridge"
    container_name: haproxy
    links:
      - web:web
      - web2:web2
    volumes:
      - ./haproxy:/app
    ports:
      - "80:80"
